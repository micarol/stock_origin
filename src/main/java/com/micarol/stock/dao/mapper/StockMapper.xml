<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.micarol.stock.dao.mapper.StockMapper" >

	<resultMap id="codeMap" type="HashMap" >
	    <result column="code" property="code"  />
	    <result column="name" property="name"  />
	</resultMap>

	<select id="allCodesForPubNotice" resultMap="codeMap">
		select 
			sc.code code, ifnull(temp.date, '2016-01-01') date
		from 
			stock_code sc 
		left join 
			(select sn.code, max(sn.date) as date from stock_notice sn group by sn.code) temp 
		on 
			sc.code=temp.code;
	</select>	  
	
	<insert id="insertUpdatePubNotice">
		insert into 
			stock_notice 
		(code, title, link, date, post_time) 
		values 
		<foreach collection="list" item="item" separator=",">
			(
			#{item.code}, #{item.title}, #{item.link}, #{item.date}, now()
			)
		</foreach>
		on duplicate key update 
			post_time = values(post_time)
	</insert>
	
	<insert id="addStockAlarmSetting" keyProperty="id">
		insert into 
			alarm_setting
		(user_id, stock_code, keyword, notice, create_time) 
		values 
		(#{setting.userid}, #{setting.code}, #{setting.keyword}, #{setting.notice}, #{setting.createTime})
	</insert>
	
	<insert id="backupStockAlarmSetting">
		insert into 
			alarm_setting_del
		select * from alarm_setting where id=${id}
	</insert>
	
	<delete id="delStockAlarmSetting">
		delete from alarm_setting where user_id=${userid} and id=${id}
	</delete>
</mapper>